/* Дан двусвязный линейный список и указатель первый элемент этого
списка. Все элементы списка хранят различные между собой значения. Необходимо
вывести значения элементов списка, которые находятся между наименьшим и
наибольшим элементами списка, в том порядке, в каком они находятся в исходном
списке. Использовать процедуры.

Все динамические структуры данных реализовывать через классы. Не использовать STL.
Для каждой динамической структуры должен быть предусмотрен
стандартный набор методов - добавления/удаления/вывода элементов.
Во всех задачах обязательно наличие дружественного интерфейса. Ввод данных с клавиатуры.*/

#include "dllist.h"

int main() {
    DoublyLinkedList list;
    int n;

    cout << "Введите количество элементов: ";
    cin >> n;

    if (n <= 0) {
        cout << "Некорректное число!" << endl;
        return 0;
    }

    cout << "Вводите элементы:" << endl;
    for (int i = 0; i < n; i++) {
        int num;
        if (!(cin >> num)) {
            cout << "Ошибка ввода!" << endl;
            return 0;
        }
        list.addElement(num);
    }

    cout << "Список: ";
    list.printList();
    list.printBetweenMinMax();

    return 0;
}
